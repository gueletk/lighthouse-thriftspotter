<div class="row">
  <div class="col-md-2"></div>
  <div class="col-md-8">
    <h1 class="text-center">Post a New Spot</h1>
    <p class="text-center">Tell us a little bit about your find and post a picture</p>
    <hr>



  <form id="postNewSpot" class="form-horizontal" method="post" action="/items/new" enctype='multipart/form-data'>
      <div class="form-group form-group-lg">
        <label class="col-sm-3 control-label">* Title</label>
        <div class="col-sm-7">
          <input type="text" name="title" class="form-control" maxlength="50">
        </div>
      </div>

      <div class="form-group form-group-lg">
        <label class="col-sm-3 control-label">* Description</label>
        <div class="col-sm-7">
          <textarea rows="6" name="description" class="form-control" maxlength="300" required ></textarea>
        </div>
      </div>

      <div class="form-group form-group-lg">
         <label class="col-sm-3 control-label">* Image</label>
         <div class="col-sm-7">
           <input type="file" name="image" required>
         </div>
       </div>

      <div class="form-group form-group-lg">
        <label class="col-sm-3 control-label">Price</label>
        <div class="col-sm-2">
          <input type="text" name="price" class="form-control" maxlength="10" >
        </div>
      </div>

      <div class="form-group form-group-lg">
        <label class="col-sm-3 control-label">* Location</label>
        <div class="col-sm-9">

              <input id="pac-input" name= "location" class="controls" type="text"
                  placeholder="Enter a location">
        
              <div id="map"></div>
<script>
  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
  var map;
  var infowindow;
  var pos;

  function initMap() {
    if (navigator.geolocation) { //GEO LOCATION, FINDS USERS LOCATION
        navigator.geolocation.getCurrentPosition(function(position) {

          pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          }
          map = new google.maps.Map(document.getElementById('map'), {
            center: myLocation,
            zoom: 13
          });
          var input = /** @type {!HTMLInputElement} */(
                     document.getElementById('pac-input'));


          map.setCenter(pos);
          var myLocation = pos; //Sets variable to geo location long and lat co-ordinates.
          var types = document.getElementById('type-selector');
          map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
          map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

          var autocomplete = new google.maps.places.Autocomplete(input);
          autocomplete.bindTo('bounds', map);

          var infowindow = new google.maps.InfoWindow();
          var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
          });

          autocomplete.addListener('place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
              window.alert("Autocomplete's returned place contains no geometry");
              return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
              map.fitBounds(place.geometry.viewport);
            } else {
              map.setCenter(place.geometry.location);
              map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setIcon(/** @type {google.maps.Icon} */({
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            var address = '';
            if (place.address_components) {
              address = [
                (place.address_components[0] && place.address_components[0].short_name || ''),
                (place.address_components[1] && place.address_components[1].short_name || ''),
                (place.address_components[2] && place.address_components[2].short_name || '')
              ].join(' ');
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
          });

          // Sets a listener on a radio button to change the filter type on Places
          // Autocomplete.
          function setupClickListener(id, types) {
            var radioButton = document.getElementById(id);
            radioButton.addEventListener('click', function() {
              autocomplete.setTypes(types);
            });
          }
        })
      };


   

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-address', ['address']);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);
  }



</script>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCTbeQc-SCnCKLpYePwXmYPwXcvd_LRGtk&libraries=places&callback=initMap"></script>
        </div>
      </div>
      <div class="form-group form-group-lg">
        <div class="col-sm-offset-3 col-sm-9">
          <button type="submit" class="btn btn-default btn-lg">SUBMIT</button>
        </div>
      </div>
  </form>



  </div>
  <div class="col-md-2"></div>
</div>
